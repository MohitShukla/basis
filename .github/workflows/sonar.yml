name: Automatically Test and Check Q-Gates

on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - dev
      - main

jobs:
  build-and-analyze:
    name: Build, Test, and SonarCloud Analysis
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the code
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Set up Node.js
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      # Step 3: Install dependencies
      - name: Install dependencies
        working-directory: auth/frontend
        run: npm install

      # Step 4: Run tests and generate coverage
      - name: Run Tests with Coverage
        working-directory: auth/frontend
        run: npm test -- --coverage

      # Step 5: Cache SonarCloud packages
      - name: Cache SonarCloud packages
        uses: actions/cache@v3
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar

      # Step 6: SonarCloud Scan
      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        with:
          args: >
            -Dsonar.organization=mohitshukla
            -Dsonar.projectKey=MohitShukla_basis
            -Dsonar.javascript.lcov.reportPaths=auth/frontend/coverage/lcov.info
            -Dsonar.coverage.exclusions=**/__mocks__/**,**/babel.config*.js,**/next.config.js
            -Dsonar.exclusions=**/__mocks__/**,**/node_modules/**
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

      # Install jq before checking Quality Gate
      - name: Install jq
        run: sudo apt-get install -y jq

      # Optional: Step 7: Check Quality Gate  
      - name: Check Quality Gate
        run: |
          curl -u "${{ secrets.SONAR_TOKEN }}:" "https://sonarcloud.io/api/qualitygates/project_status?projectKey=MohitShukla_basis" > quality_gate.json
          if [ "$(jq -r '.projectStatus.status' quality_gate.json)" != "OK" ]; then
            echo "Quality Gate failed!"
            exit 1
          fi
